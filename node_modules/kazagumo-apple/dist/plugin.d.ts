import { KazagumoPlugin as Plugin, Kazagumo, KazagumoTrack } from "kazagumo";
type AppleOptions = {
    countryCode?: string;
    imageWidth?: number;
    imageHeight?: number;
};
export declare class KazagumoPlugin extends Plugin {
    options: AppleOptions;
    private _search;
    private kazagumo;
    private credentials;
    private readonly methods;
    private fetchURL;
    private baseURL;
    countryCode: string;
    imageWidth: number;
    imageHeight: number;
    constructor(appleOptions: AppleOptions);
    load(kazagumo: Kazagumo): void;
    getData(params: string): Promise<any>;
    private search;
    private buildSearch;
    private searchTrack;
    private getTrack;
    private getArtist;
    private getAlbum;
    private getPlaylist;
    private filterNullOrUndefined;
    private buildKazagumoTrack;
}
export interface Result {
    tracks: KazagumoTrack[];
    name?: string;
}
export interface Track {
    id: string;
    type: string;
    href: string;
    attributes: TrackAttributes;
}
export interface TrackAttributes {
    albumName: string;
    hasTimeSyncedLyrics: boolean;
    genreNames: any[];
    trackNumber: number;
    releaseDate: string;
    durationInMillis: number;
    isVocalAttenuationAllowed: boolean;
    isMasteredForItunes: boolean;
    isrc: string;
    artwork: Record<string, any>;
    audioLocale: string;
    composerName: string;
    url: string;
    playParams: Record<string, any>;
    discNumber: number;
    hasCredits: boolean;
    hasLyrics: boolean;
    isAppleDigitalMaster: boolean;
    audioTraits: any[];
    name: string;
    previews: any[];
    artistName: string;
}
export {};
